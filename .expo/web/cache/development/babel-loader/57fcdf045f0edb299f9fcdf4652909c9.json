{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nancyzheng/EC463_SW-07_Mini_Project/screens/SignIn.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { signIn } from \"../API/firebaseMethods\";\nexport default function SignIn() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var handlePress = function handlePress() {\n    if (!email) {\n      Alert.alert('Email field is required.');\n    }\n\n    if (!password) {\n      Alert.alert('Password field is required.');\n    }\n\n    signIn(email, password);\n    setEmail('');\n    setPassword('');\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"Sign in to your account:\"), React.createElement(TextInput, {\n    style: styles.formInput,\n    placeholder: \"Enter your email\",\n    value: email,\n    onChangeText: function onChangeText(email) {\n      return setEmail(email);\n    },\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: styles.formInput,\n    placeholder: \"Enter your password\",\n    value: password,\n    onChangeText: function onChangeText(password) {\n      return setPassword(password);\n    },\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: handlePress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Sumbit\")));\n}\nvar styles = StyleSheet.create({\n  button: {\n    width: 200,\n    padding: 5,\n    backgroundColor: '#ADD8E6',\n    borderWidth: 2,\n    borderColor: 'white',\n    borderRadius: 0,\n    alignSelf: 'center',\n    margin: \"2%\"\n  },\n  buttonText: {\n    fontSize: 20,\n    color: 'navy',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  container: {\n    height: '100%',\n    width: '100%',\n    backgroundColor: 'white',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  formInput: {\n    width: 300,\n    fontSize: 18,\n    borderWidth: 1,\n    borderColor: 'black',\n    padding: 10,\n    margin: 5\n  },\n  text: {\n    textAlign: 'center',\n    fontSize: 20,\n    margin: 10,\n    fontWeight: 'bold',\n    color: 'navy'\n  }\n});","map":{"version":3,"sources":["/Users/nancyzheng/EC463_SW-07_Mini_Project/screens/SignIn.js"],"names":["React","useState","TouchableOpacity","signIn","SignIn","email","setEmail","password","setPassword","handlePress","Alert","alert","styles","container","text","formInput","button","buttonText","StyleSheet","create","width","padding","backgroundColor","borderWidth","borderColor","borderRadius","alignSelf","margin","fontSize","color","fontWeight","textAlign","height","alignItems","justifyContent"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAEA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAAQC,MAAR;AAEA,eAAe,SAASC,MAAT,GAAkB;AAC/B,kBAA0BH,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOI,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCL,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOM,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAI,CAACJ,KAAL,EAAY;AACVK,MAAAA,KAAK,CAACC,KAAN,CAAY,0BAAZ;AACD;;AAED,QAAI,CAACJ,QAAL,EAAe;AACbG,MAAAA,KAAK,CAACC,KAAN,CAAY,6BAAZ;AACD;;AAEDR,IAAAA,MAAM,CAACE,KAAD,EAAQE,QAAR,CAAN;AACAD,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD,GAZD;;AAcA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAGE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEF,MAAM,CAACG,SADhB;AAEE,IAAA,WAAW,EAAC,kBAFd;AAGE,IAAA,KAAK,EAAEV,KAHT;AAIE,IAAA,YAAY,EAAE,sBAACA,KAAD;AAAA,aAAWC,QAAQ,CAACD,KAAD,CAAnB;AAAA,KAJhB;AAKE,IAAA,cAAc,EAAC,MALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAUE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEO,MAAM,CAACG,SADhB;AAEE,IAAA,WAAW,EAAC,qBAFd;AAGE,IAAA,KAAK,EAAER,QAHT;AAIE,IAAA,YAAY,EAAE,sBAACA,QAAD;AAAA,aAAcC,WAAW,CAACD,QAAD,CAAzB;AAAA,KAJhB;AAKE,IAAA,eAAe,EAAE,IALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAkBE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEK,MAAM,CAACI,MAAhC;AAAwC,IAAA,OAAO,EAAEP,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACK,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAlBF,CADF;AAyBD;AAED,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,MAAM,EAAE;AACNI,IAAAA,KAAK,EAAE,GADD;AAENC,IAAAA,OAAO,EAAE,CAFH;AAGNC,IAAAA,eAAe,EAAE,SAHX;AAINC,IAAAA,WAAW,EAAE,CAJP;AAKNC,IAAAA,WAAW,EAAE,OALP;AAMNC,IAAAA,YAAY,EAAE,CANR;AAONC,IAAAA,SAAS,EAAE,QAPL;AAQNC,IAAAA,MAAM,EAAE;AARF,GADuB;AAW/BV,EAAAA,UAAU,EAAE;AACVW,IAAAA,QAAQ,EAAC,EADC;AAEVC,IAAAA,KAAK,EAAE,MAFG;AAGVC,IAAAA,UAAU,EAAE,MAHF;AAIVC,IAAAA,SAAS,EAAE;AAJD,GAXmB;AAiB/BlB,EAAAA,SAAS,EAAE;AACTmB,IAAAA,MAAM,EAAE,MADC;AAETZ,IAAAA,KAAK,EAAE,MAFE;AAGTE,IAAAA,eAAe,EAAE,OAHR;AAITW,IAAAA,UAAU,EAAE,QAJH;AAKTC,IAAAA,cAAc,EAAE;AALP,GAjBoB;AAwB/BnB,EAAAA,SAAS,EAAE;AACTK,IAAAA,KAAK,EAAE,GADE;AAETQ,IAAAA,QAAQ,EAAC,EAFA;AAGTL,IAAAA,WAAW,EAAE,CAHJ;AAITC,IAAAA,WAAW,EAAC,OAJH;AAKTH,IAAAA,OAAO,EAAE,EALA;AAMTM,IAAAA,MAAM,EAAE;AANC,GAxBoB;AAgC/Bb,EAAAA,IAAI,EAAE;AACJiB,IAAAA,SAAS,EAAE,QADP;AAEJH,IAAAA,QAAQ,EAAE,EAFN;AAGJD,IAAAA,MAAM,EAAE,EAHJ;AAIJG,IAAAA,UAAU,EAAE,MAJR;AAKJD,IAAAA,KAAK,EAAE;AALH;AAhCyB,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TextInput, StyleSheet, Alert } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport {signIn} from '../API/firebaseMethods';\n\nexport default function SignIn() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handlePress = () => {\n    if (!email) {\n      Alert.alert('Email field is required.');\n    }\n\n    if (!password) {\n      Alert.alert('Password field is required.');\n    }\n\n    signIn(email, password);\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.text}>Sign in to your account:</Text>\n\n      <TextInput\n        style={styles.formInput}\n        placeholder=\"Enter your email\"\n        value={email}\n        onChangeText={(email) => setEmail(email)}\n        autoCapitalize=\"none\"\n      />\n      <TextInput\n        style={styles.formInput}\n        placeholder=\"Enter your password\"\n        value={password}\n        onChangeText={(password) => setPassword(password)}\n        secureTextEntry={true}\n      />\n\n      <TouchableOpacity style={styles.button} onPress={handlePress}>\n        <Text style={styles.buttonText}>Sumbit</Text>\n      </TouchableOpacity>\n\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    width: 200,\n    padding: 5,\n    backgroundColor: '#ADD8E6',\n    borderWidth: 2,\n    borderColor: 'white',\n    borderRadius: 0,\n    alignSelf: 'center',\n    margin: \"2%\",\n  },\n  buttonText: {\n    fontSize:20,\n    color: 'navy',\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  container: {\n    height: '100%',\n    width: '100%',\n    backgroundColor: 'white',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  formInput: {\n    width: 300,\n    fontSize:18,\n    borderWidth: 1,\n    borderColor:'black',\n    padding: 10,\n    margin: 5,\n  },\n  text: {\n    textAlign: 'center',\n    fontSize: 20,\n    margin: 10,\n    fontWeight: 'bold',\n    color: 'navy',\n  }\n});"]},"metadata":{},"sourceType":"module"}