{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nancyzheng/EC463_SW-07_Mini_Project/components/Scanner.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, Component } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { BarCodeScanner } from 'expo-barcode-scanner';\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width;\n\nfunction Scanner() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      scanned = _useState4[0],\n      setScanned = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$BarCodeScanner, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(BarCodeScanner.requestPermissionsAsync());\n\n            case 2:\n              _await$BarCodeScanner = _context.sent;\n              status = _await$BarCodeScanner.status;\n              setHasPermission(status === 'granted');\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var handleBarCodeScanned = function handleBarCodeScanned(_ref) {\n    var type = _ref.type,\n        data = _ref.data;\n    setScanned(true);\n    alert(\"Bar code with type \" + type + \" and data \" + data + \" has been scanned!\");\n    {\n      cancelable: false;\n    }\n  };\n\n  if (hasPermission === null) {\n    return React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 12\n      }\n    }, \"Requesting for camera permission\");\n  }\n\n  if (hasPermission === false) {\n    return React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 12\n      }\n    }, \"No access to camera\");\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, React.createElement(BarCodeScanner, {\n    onBarCodeScanned: scanned ? undefined : handleBarCodeScanned,\n    style: [StyleSheet.absoluteFill, styles.container],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.layerTop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Scan your barcode\")), React.createElement(View, {\n    style: styles.layerCenter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.layerLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.focused,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.layerRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.layerBottom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  })), scanned && React.createElement(Button, {\n    title: 'Tap to Scan Again',\n    onPress: function onPress() {\n      return setScanned(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 22\n    }\n  })));\n}\n\nvar opacity = 'rgba(0, 0, 0, .6)';\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: \"center\"\n  },\n  description: {\n    fontSize: 20,\n    marginTop: \"50%\",\n    textAlign: \"center\",\n    color: \"white\"\n  },\n  layerTop: {\n    flex: 2,\n    backgroundColor: opacity\n  },\n  layerCenter: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  buttonStyle: {\n    flex: 1,\n    marginBottom: \"3%\"\n  },\n  layerLeft: {\n    flex: 1,\n    backgroundColor: opacity\n  },\n  focused: {\n    flex: 10\n  },\n  layerRight: {\n    flex: 1,\n    backgroundColor: opacity\n  },\n  layerBottom: {\n    flex: 2,\n    backgroundColor: opacity\n  }\n});\nexport default Scanner;","map":{"version":3,"sources":["/Users/nancyzheng/EC463_SW-07_Mini_Project/components/Scanner.js"],"names":["React","useState","useEffect","Component","BarCodeScanner","Dimensions","get","width","Scanner","hasPermission","setHasPermission","scanned","setScanned","requestPermissionsAsync","status","handleBarCodeScanned","type","data","alert","cancelable","styles","container","undefined","StyleSheet","absoluteFill","layerTop","description","layerCenter","layerLeft","focused","layerRight","layerBottom","opacity","create","flex","flexDirection","justifyContent","fontSize","marginTop","textAlign","color","backgroundColor","buttonStyle","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Component } from 'react';\nimport { Button, Dimensions, StyleSheet, Text, View, Alert } from 'react-native';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\n\n\nconst { width } = Dimensions.get('window');\n\nfunction Scanner() {\n  const [hasPermission, setHasPermission] = useState(null);\n  const [scanned, setScanned] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      const { status } = await BarCodeScanner.requestPermissionsAsync();\n      setHasPermission(status === 'granted');\n    })();\n  }, []);\n\n  const handleBarCodeScanned = ({ type, data }) => {\n    setScanned(true);\n    alert(`Bar code with type ${type} and data ${data} has been scanned!`);\n      { cancelable: false }\n  };\n\n\n  if (hasPermission === null) {\n    return <Text>Requesting for camera permission</Text>;\n  }\n  if (hasPermission === false) {\n    return <Text>No access to camera</Text>;\n  }\n\n  return (\n    <>\n      <View style={styles.container}>\n        <BarCodeScanner\n          onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\n          style={[StyleSheet.absoluteFill, styles.container]}\n        >\n          <View style={styles.layerTop}>\n            <Text style={styles.description}>Scan your barcode</Text>\n          </View>\n          <View style={styles.layerCenter}>\n            <View style={styles.layerLeft}/>\n            <View style={styles.focused}>\n          </View>\n          <View style={styles.layerRight}/>\n          </View>\n          <View style={styles.layerBottom}/>\n         </BarCodeScanner>\n         {scanned && <Button title={'Tap to Scan Again'} onPress={() => setScanned(false)} />}\n     </View>\n  </>\n    );\n}\n\nconst opacity = 'rgba(0, 0, 0, .6)';\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: \"center\",\n  },\n  description: {\n    fontSize: 20,\n    marginTop: \"50%\",\n    textAlign: \"center\",\n    color: \"white\",\n  },\n  layerTop: {\n    flex: 2,\n    backgroundColor: opacity\n  },\n  layerCenter: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  buttonStyle: {\n    flex: 1,\n    marginBottom: \"3%\"\n  },\n  layerLeft: {\n    flex: 1,\n    backgroundColor: opacity\n  },\n  focused: {\n    flex: 10\n  },\n  layerRight: {\n    flex: 1,\n    backgroundColor: opacity\n  },\n  layerBottom: {\n    flex: 2,\n    backgroundColor: opacity\n  },\n});\n\nexport default Scanner;"]},"metadata":{},"sourceType":"module"}