{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nancyzheng/EC463_SW-07_Mini_Project/screens/SignUp.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { registration } from \"../API/firebaseMethods\";\nexport default function SignUp(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      firstName = _useState2[0],\n      setFirstName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lastName = _useState4[0],\n      setLastName = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setPassword = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      confirmPassword = _useState10[0],\n      setConfirmPassword = _useState10[1];\n\n  var emptyState = function emptyState() {\n    setFirstName('');\n    setLastName('');\n    setEmail('');\n    setPassword('');\n    setConfirmPassword('');\n  };\n\n  var handlePress = function handlePress() {\n    if (!firstName) {\n      Alert.alert('First name is required');\n    } else if (!email) {\n      Alert.alert('Email field is required.');\n    } else if (!password) {\n      Alert.alert('Password field is required.');\n    } else if (!confirmPassword) {\n      setPassword('');\n      Alert.alert('Confirm password field is required.');\n    } else if (password !== confirmPassword) {\n      Alert.alert('Password does not match!');\n    } else {\n      registration(email, password, lastName, firstName);\n      navigation.navigate('Loading');\n      emptyState();\n    }\n  };\n\n  return React.createElement(SafeAreaView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 6\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 8\n    }\n  }, \"Create an account \"), React.createElement(ScrollView, {\n    onBlur: Keyboard.dismiss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 8\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"First name*\",\n    value: firstName,\n    onChangeText: function onChangeText(name) {\n      return setFirstName(name);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Last name\",\n    value: lastName,\n    onChangeText: function onChangeText(name) {\n      return setLastName(name);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 10\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Enter your email*\",\n    value: email,\n    onChangeText: function onChangeText(email) {\n      return setEmail(email);\n    },\n    keyboardType: \"email-address\",\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 10\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Enter your password*\",\n    value: password,\n    onChangeText: function onChangeText(password) {\n      return setPassword(password);\n    },\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Retype your password to confirm*\",\n    value: confirmPassword,\n    onChangeText: function onChangeText(password2) {\n      return setConfirmPassword(password2);\n    },\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 10\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: handlePress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 12\n    }\n  }, \"Sign Up\")), React.createElement(Text, {\n    style: styles.inlineText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Already have an account?\"), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return navigation.navigate('Sign In');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Sign In\")))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    height: '100%',\n    width: '100%',\n    backgroundColor: 'white',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    width: 200,\n    padding: 5,\n    backgroundColor: '#ADD8E6',\n    borderWidth: 2,\n    borderColor: 'white',\n    borderRadius: 0,\n    alignSelf: 'center',\n    margin: '15%'\n  },\n  buttonText: {\n    fontSize: 20,\n    color: 'navy',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  inlineText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: 'navy',\n    textAlign: 'center',\n    marginTop: '5%'\n  },\n  text: {\n    textAlign: 'center',\n    fontSize: 25,\n    margin: '5%',\n    marginTop: '15%',\n    fontWeight: 'bold',\n    color: 'navy'\n  },\n  textInput: {\n    width: 300,\n    fontSize: 18,\n    borderWidth: 1,\n    borderColor: 'black',\n    padding: 10,\n    margin: 5\n  }\n});","map":{"version":3,"sources":["/Users/nancyzheng/EC463_SW-07_Mini_Project/screens/SignUp.js"],"names":["React","useState","TouchableOpacity","registration","SignUp","navigation","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","emptyState","handlePress","Alert","alert","navigate","styles","container","text","Keyboard","dismiss","textInput","name","password2","button","buttonText","inlineText","StyleSheet","create","height","width","backgroundColor","alignItems","justifyContent","padding","borderWidth","borderColor","borderRadius","alignSelf","margin","fontSize","color","fontWeight","textAlign","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TextInput, Alert, ScrollView, Keyboard ,StyleSheet, SafeAreaView} from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { registration } from '../API/firebaseMethods';\n\nexport default function SignUp({ navigation }) {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const emptyState = () => {\n    setFirstName('');\n    setLastName('');\n    setEmail('');\n    setPassword('');\n    setConfirmPassword('');\n  };\n\n  const handlePress = () => {\n    if (!firstName) {\n      Alert.alert('First name is required');\n    } else if (!email) {\n      Alert.alert('Email field is required.');\n    } else if (!password) {\n      Alert.alert('Password field is required.');\n    } else if (!confirmPassword) {\n      setPassword('');\n      Alert.alert('Confirm password field is required.');\n    } else if (password !== confirmPassword) {\n      Alert.alert('Password does not match!');\n    } else {\n      registration(\n        email,\n        password,\n        lastName,\n        firstName,\n      );\n      navigation.navigate('Loading');\n      emptyState();\n    }\n  };\n\n  return (\n    <SafeAreaView>\n     <View style={styles.container}>\n       <Text style={styles.text}>Create an account </Text>\n\n       <ScrollView onBlur={Keyboard.dismiss}>\n          <TextInput\n          style={styles.textInput}\n          placeholder=\"First name*\"\n          value={firstName}\n          onChangeText={(name) => setFirstName(name)}\n          />\n         <TextInput\n          style={styles.textInput}\n          placeholder=\"Last name\"\n          value={lastName}\n          onChangeText={(name) => setLastName(name)}\n         />\n\n         <TextInput\n          style={styles.textInput}\n          placeholder=\"Enter your email*\"\n          value={email}\n          onChangeText={(email) => setEmail(email)}\n          keyboardType=\"email-address\"\n          autoCapitalize=\"none\"\n         />\n\n          <TextInput\n          style={styles.textInput}\n          placeholder=\"Enter your password*\"\n          value={password}\n          onChangeText={(password) => setPassword(password)}\n          secureTextEntry={true}\n         />\n         <TextInput\n          style={styles.textInput}\n          placeholder=\"Retype your password to confirm*\"\n          value={confirmPassword}\n          onChangeText={(password2) => setConfirmPassword(password2)}\n          secureTextEntry={true}\n          />\n          <TouchableOpacity style={styles.button} onPress={handlePress}>\n           <Text style={styles.buttonText}>Sign Up</Text>\n          </TouchableOpacity>\n\n          <Text style={styles.inlineText}>Already have an account?</Text>\n          <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('Sign In')}>\n            <Text style={styles.buttonText}>Sign In</Text>\n          </TouchableOpacity>\n       </ScrollView>\n     </View>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: '100%',\n    width: '100%',\n    backgroundColor: 'white',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  button: {\n    width: 200,\n    padding: 5,\n    backgroundColor:'#ADD8E6',\n    borderWidth: 2,\n    borderColor: 'white',\n    borderRadius: 0,\n    alignSelf: 'center',\n    margin: '15%',\n  },\n  buttonText: {\n    fontSize:20,\n    color: 'navy',\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  inlineText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: 'navy',\n    textAlign: 'center',\n    marginTop: '5%',\n  },\n  text: {\n    textAlign: 'center',\n    fontSize: 25,\n    margin: '5%',\n    marginTop:'15%',\n    fontWeight: 'bold',\n    color: 'navy',\n  },\n  textInput: {\n    width: 300,\n    fontSize:18,\n    borderWidth: 1,\n    borderColor:'black',\n    padding: 10,\n    margin: 5,\n  },\n});"]},"metadata":{},"sourceType":"module"}